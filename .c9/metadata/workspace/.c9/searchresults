{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001has_secure_password\u0001 in\u0001project files (excludes .gitignore'd files)\u0001 (Found 37 matches in 20 files)\n\n/Gemfile:\n\t28: # Use ActiveModel has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/activemodel-4.2.4/CHANGELOG.md:\n\t59: *   `has_secure_password` now verifies that the given password is less than 72\n\n/vendor/cache/ruby/2.2.0/gems/activemodel-4.2.4/lib/active_model/secure_password.rb:\n\t32:       # Add bcrypt (~> 3.1.7) to Gemfile to use #has_secure_password:\n\t40:       #     has_secure_password\n\t53:       def has_secure_password(options = {})\n\t54:         # Load bcrypt gem only when has_secure_password is used.\n\t94:       #     has_secure_password validations: false\n\t111:       #     has_secure_password validations: false\n\n/vendor/cache/ruby/2.2.0/gems/activerecord-4.2.4/lib/rails/generators/active_record/model/templates/model.rb:\n\t7:   has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/bcrypt-3.1.10/README.md:\n\t39: `has_secure_password` [docs](http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password)\n\n/vendor/cache/ruby/2.2.0/gems/bcrypt-ruby-3.1.5/README.md:\n\t39: `has_secure_password` [docs](http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password)\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/secure_password.rb:\n\t9:     # a has_secure_password method.\n\t12:         unless base.respond_to?(:has_secure_password)\n\t29:         #     has_secure_password\n\t42:         def has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/active_record.rb:\n\t11:         has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/couch_potato.rb:\n\t16:             has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/data_mapper.rb:\n\t17:             has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/mongo_mapper.rb:\n\t12:             has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/mongoid.rb:\n\t15:             has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/spec/omniauth/identity/secure_password_spec.rb:\n\t4:   def self.has_secure_password; end\n\t21:   it 'should respond to has_secure_password afterwards' do\n\t24:       klass.should be_respond_to(:has_secure_password)\n\n/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/3_1_release_notes.md:\n\t480: * Added `ActiveRecord::Base#has_secure_password` (via `ActiveModel::SecurePassword`) to encapsulate dead-simple password usage with BCrypt encryption and salting.\n\t485:       has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/4_2_release_notes.md:\n\t788: *   `has_secure_password` no longer disallows blank passwords (i.e. passwords\n\t792: *   `has_secure_password` now verifies that the given password is less than 72\n\n/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/active_model_basics.md:\n\t514: `has_secure_password` class method is provided which defines\n\t522: The `has_secure_password` will add the following validations on the `password` accessor:\n\t533:   has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/security.md:\n\t388: There are a number of authentication plug-ins for Rails available. Good ones, such as the popular [devise](https://github.com/plataformatec/devise) and [authlogic](https://github.com/binarylogic/authlogic), store only encrypted passwords, not plain-text passwords. In Rails 3.1 you can use the built-in `has_secure_password` method which has similar features.\n\n/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/app/templates/Gemfile:\n\t15: # Use ActiveModel has_secure_password\n\n/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/model/USAGE:\n\t11:     tests for use with ActiveModel has_secure_password (assuming the default ORM\n\t82:     has_secure_password, you should specify `password:digest`:\n\n/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/scaffold/USAGE:\n\t20:     has_secure_password (assuming they are using Rails defaults).\n\nFound 37 matches in 20 files \n\n","undoManager":{"mark":-2,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001has_secure_password\u0001 in\u0001project files (excludes .gitignore'd files)\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/Gemfile:",""],"id":2},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t28: # Use ActiveModel has_secure_password","",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/activemodel-4.2.4/CHANGELOG.md:",""],"id":3},{"start":{"row":6,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["\t59: *   `has_secure_password` now verifies that the given password is less than 72","",""]},{"start":{"row":8,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/activemodel-4.2.4/lib/active_model/secure_password.rb:","\t32:       # Add bcrypt (~> 3.1.7) to Gemfile to use #has_secure_password:","\t40:       #     has_secure_password","\t53:       def has_secure_password(options = {})","\t54:         # Load bcrypt gem only when has_secure_password is used.","\t94:       #     has_secure_password validations: false","\t111:       #     has_secure_password validations: false","",""]}],[{"start":{"row":16,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/activerecord-4.2.4/lib/rails/generators/active_record/model/templates/model.rb:","\t7:   has_secure_password","",""],"id":4}],[{"start":{"row":19,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/bcrypt-3.1.10/README.md:","\t39: `has_secure_password` [docs](http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password)","",""],"id":5},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/bcrypt-ruby-3.1.5/README.md:",""]},{"start":{"row":23,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["\t39: `has_secure_password` [docs](http://api.rubyonrails.org/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password)","",""]}],[{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/secure_password.rb:",""],"id":6},{"start":{"row":26,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["\t9:     # a has_secure_password method.","\t12:         unless base.respond_to?(:has_secure_password)","\t29:         #     has_secure_password","\t42:         def has_secure_password","",""]},{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/active_record.rb:",""]},{"start":{"row":32,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["\t11:         has_secure_password","",""]},{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/couch_potato.rb:",""]},{"start":{"row":35,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["\t16:             has_secure_password","",""]},{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/data_mapper.rb:",""]},{"start":{"row":38,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["\t17:             has_secure_password","",""]},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/mongo_mapper.rb:",""]},{"start":{"row":41,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["\t12:             has_secure_password","",""]}],[{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/lib/omniauth/identity/models/mongoid.rb:",""],"id":7},{"start":{"row":44,"column":0},"end":{"row":46,"column":0},"action":"insert","lines":["\t15:             has_secure_password","",""]},{"start":{"row":46,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/omniauth-identity-1.1.1/spec/omniauth/identity/secure_password_spec.rb:",""]},{"start":{"row":47,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["\t4:   def self.has_secure_password; end","\t21:   it 'should respond to has_secure_password afterwards' do","\t24:       klass.should be_respond_to(:has_secure_password)","",""]},{"start":{"row":51,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/3_1_release_notes.md:","\t480: * Added `ActiveRecord::Base#has_secure_password` (via `ActiveModel::SecurePassword`) to encapsulate dead-simple password usage with BCrypt encryption and salting.","\t485:       has_secure_password","",""]},{"start":{"row":55,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/4_2_release_notes.md:","\t788: *   `has_secure_password` no longer disallows blank passwords (i.e. passwords","\t792: *   `has_secure_password` now verifies that the given password is less than 72","",""]},{"start":{"row":59,"column":0},"end":{"row":64,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/active_model_basics.md:","\t514: `has_secure_password` class method is provided which defines","\t522: The `has_secure_password` will add the following validations on the `password` accessor:","\t533:   has_secure_password","",""]},{"start":{"row":64,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/rails-4.2.4/guides/source/security.md:",""]},{"start":{"row":65,"column":0},"end":{"row":67,"column":0},"action":"insert","lines":["\t388: There are a number of authentication plug-ins for Rails available. Good ones, such as the popular [devise](https://github.com/plataformatec/devise) and [authlogic](https://github.com/binarylogic/authlogic), store only encrypted passwords, not plain-text passwords. In Rails 3.1 you can use the built-in `has_secure_password` method which has similar features.","",""]},{"start":{"row":67,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/app/templates/Gemfile:",""]},{"start":{"row":68,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["\t15: # Use ActiveModel has_secure_password","",""]},{"start":{"row":70,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/model/USAGE:","\t11:     tests for use with ActiveModel has_secure_password (assuming the default ORM","\t82:     has_secure_password, you should specify `password:digest`:","",""]},{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["/vendor/cache/ruby/2.2.0/gems/railties-4.2.4/lib/rails/generators/rails/scaffold/USAGE:",""]},{"start":{"row":75,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["\t20:     has_secure_password (assuming they are using Rails defaults).","",""]}],[{"start":{"row":77,"column":0},"end":{"row":78,"column":0},"action":"insert","lines":["Found 37 matches in 20 files ",""],"id":8}],[{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":0,"column":83},"end":{"row":0,"column":114},"action":"insert","lines":[" (Found 37 matches in 20 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":22,"scrollleft":0,"selection":{"start":{"row":79,"column":0},"end":{"row":79,"column":0},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":0,"state":["start",{}],"mode":"ace/mode/c9search"}},"timestamp":1448059044711}